[32m[OK][m linux-headers is already installed. Skipping...
[32m[OK][m nvidia-dkms is already installed. Skipping...
[32m[OK][m nvidia-settings is already installed. Skipping...
[32m[OK][m nvidia-utils is already installed. Skipping...
[32m[OK][m libva is already installed. Skipping...
[33m[NOTE][m Installing libva-nvidia-driver-git ...
AUR Explicit (1): libva-nvidia-driver-git-0.0.12.r11.gf3205bd-1
Sync Make Dependency (1): ffnvcodec-headers-12.2.72.0-1
AUR Explicit (1): libva-nvidia-driver-git-0.0.12.r11.gf3205bd-1
Sync Make Dependency (1): ffnvcodec-headers-12.2.72.0-1
:: [1m(1/1) Downloaded PKGBUILD: libva-nvidia-driver-git[0m
:: [1m(1/1) Downloaded PKGBUILD: libva-nvidia-driver-git[0m
  1 libva-nvidia-driver-git                  (Build Files Exist)
==> Packages to cleanBuild?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
  1 libva-nvidia-driver-git                  (Build Files Exist)
==> Diffs to show?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
  1 libva-nvidia-driver-git                  (Build Files Exist)
==> Packages to cleanBuild?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
  1 libva-nvidia-driver-git                  (Build Files Exist)
==> Diffs to show?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 02 Aug 2024 04:36:57 PM PDT)
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 02 Aug 2024 04:36:57 PM PDT)
==> Retrieving sources...
==> Retrieving sources...
  -> Cloning libva-nvidia-driver-git git repo...
  -> Cloning libva-nvidia-driver-git git repo...
Cloning into bare repository '/home/nightwatcher/.cache/yay/libva-nvidia-driver-git/libva-nvidia-driver-git'...
Cloning into bare repository '/home/nightwatcher/.cache/yay/libva-nvidia-driver-git/libva-nvidia-driver-git'...
==> WARNING: Skipping verification of source file PGP signatures.
==> WARNING: Skipping verification of source file PGP signatures.
==> Validating source files with sha256sums...
==> Validating source files with sha256sums...
    libva-nvidia-driver-git ...     libva-nvidia-driver-git ... Skipped
Skipped
:: [1m(1/1) Parsing SRCINFO: libva-nvidia-driver-git[0m
:: [1m(1/1) Parsing SRCINFO: libva-nvidia-driver-git[0m
resolving dependencies...
looking for conflicting packages...
resolving dependencies...
looking for conflicting packages...

Package (1)              New Version  Net Change  Download Size

extra/ffnvcodec-headers  12.2.72.0-1    0.42 MiB       0.07 MiB

Total Download Size:   0.07 MiB
Total Installed Size:  0.42 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...

Package (1)              New Version  Net Change  Download Size

extra/ffnvcodec-headers  12.2.72.0-1    0.42 MiB       0.07 MiB

Total Download Size:   0.07 MiB
Total Installed Size:  0.42 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...
 ffnvcodec-headers-12.2.72.0-1-any downloading...
checking keyring...
 ffnvcodec-headers-12.2.72.0-1-any downloading...
checking keyring...
checking package integrity...
checking package integrity...
loading package files...
loading package files...
checking for file conflicts...
checking available disk space...
:: Processing package changes...
installing ffnvcodec-headers...
checking for file conflicts...
checking available disk space...
:: Processing package changes...
installing ffnvcodec-headers...
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 02 Aug 2024 04:37:01 PM PDT)
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 02 Aug 2024 04:37:01 PM PDT)
==> Checking runtime dependencies...
==> Checking runtime dependencies...
==> Checking buildtime dependencies...
==> Checking buildtime dependencies...
==> Retrieving sources...
==> Retrieving sources...
  -> Updating libva-nvidia-driver-git git repo...
  -> Updating libva-nvidia-driver-git git repo...
==> Validating source files with sha256sums...
    libva-nvidia-driver-git ... ==> Validating source files with sha256sums...
    libva-nvidia-driver-git ... Skipped
Skipped
==> Removing existing $srcdir/ directory...
==> Removing existing $srcdir/ directory...
==> Extracting sources...
==> Extracting sources...
  -> Creating working copy of libva-nvidia-driver-git git repo...
  -> Creating working copy of libva-nvidia-driver-git git repo...
Cloning into 'libva-nvidia-driver-git'...
Cloning into 'libva-nvidia-driver-git'...
done.
done.
==> Starting pkgver()...
==> Starting pkgver()...
==> Sources are ready.
==> Sources are ready.
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 02 Aug 2024 04:37:07 PM PDT)
==> Making package: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 02 Aug 2024 04:37:07 PM PDT)
==> Checking runtime dependencies...
==> Checking runtime dependencies...
==> Checking buildtime dependencies...
==> Checking buildtime dependencies...
==> WARNING: Using existing $srcdir/ tree
==> WARNING: Using existing $srcdir/ tree
==> Starting pkgver()...
==> Starting pkgver()...
==> Starting build()...
==> Starting build()...
+ exec meson setup --prefix /usr --libexecdir lib --sbindir bin --buildtype plain --auto-features enabled --wrap-mode nodownload -D b_pie=true -D python.bytecompile=1 . build
+ exec meson setup --prefix /usr --libexecdir lib --sbindir bin --buildtype plain --auto-features enabled --wrap-mode nodownload -D b_pie=true -D python.bytecompile=1 . build
The Meson build system
Version: 1.5.1
Source dir: /home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git
Build dir: /home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build
Build type: native build
Project name: nvidia-vaapi-driver
Project version: 0.1
C compiler for the host machine: cc (gcc 14.1.1 "cc (GCC) 14.1.1 20240720")
C linker for the host machine: cc ld.bfd 2.42.0
Host machine cpu family: x86_64
Host machine cpu: x86_64
Library m found: YES
Library dl found: YES
Found pkg-config: YES (/usr/bin/pkg-config) 2.1.1
Run-time dependency egl found: YES 1.5
Run-time dependency ffnvcodec found: YES 12.2.72.0
Run-time dependency libdrm found: YES 2.4.122
Run-time dependency threads found: YES
Run-time dependency libva found: YES 1.22.0
Run-time dependency gstreamer-codecparsers-1.0 found: YES 1.24.6
Compiler for C supports arguments -Wno-missing-field-initializers: YES 
Compiler for C supports arguments -Wno-unused-parameter: YES 
Compiler for C supports arguments -Werror=format: YES 
Compiler for C supports arguments -Werror=format-security: YES 
Compiler for C supports arguments -Werror=incompatible-pointer-types: YES 
Compiler for C supports arguments -Werror=init-self: YES 
Compiler for C supports arguments -Werror=int-conversion: YES 
Compiler for C supports arguments -Werror=missing-declarations: YES 
Compiler for C supports arguments -Werror=missing-prototypes: YES 
Compiler for C supports arguments -Werror=pointer-arith: YES 
Compiler for C supports arguments -Werror=undef: YES 
Compiler for C supports arguments -Werror=vla: YES 
Compiler for C supports arguments -Wsuggest-attribute=format: YES 
Compiler for C supports arguments -Wwrite-strings: YES 
Build targets in project: 1

nvidia-vaapi-driver 0.1

  User defined options
    auto_features     : enabled
    buildtype         : plain
    libexecdir        : lib
    prefix            : /usr
    sbindir           : bin
    wrap_mode         : nodownload
    python.bytecompile: 1
    b_pie             : true

Found ninja-1.12.1 at /usr/bin/ninja
Generating targets:   0%|          | 0/1 eta ?                                              Writing build.ninja:   0%|          | 0/41 eta ?                                                The Meson build system
Version: 1.5.1
Source dir: /home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git
Build dir: /home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build
Build type: native build
Project name: nvidia-vaapi-driver
Project version: 0.1
C compiler for the host machine: cc (gcc 14.1.1 "cc (GCC) 14.1.1 20240720")
C linker for the host machine: cc ld.bfd 2.42.0
Host machine cpu family: x86_64
Host machine cpu: x86_64
Library m found: YES
Library dl found: YES
Found pkg-config: YES (/usr/bin/pkg-config) 2.1.1
Run-time dependency egl found: YES 1.5
Run-time dependency ffnvcodec found: YES 12.2.72.0
Run-time dependency libdrm found: YES 2.4.122
Run-time dependency threads found: YES
Run-time dependency libva found: YES 1.22.0
Run-time dependency gstreamer-codecparsers-1.0 found: YES 1.24.6
Compiler for C supports arguments -Wno-missing-field-initializers: YES 
Compiler for C supports arguments -Wno-unused-parameter: YES 
Compiler for C supports arguments -Werror=format: YES 
Compiler for C supports arguments -Werror=format-security: YES 
Compiler for C supports arguments -Werror=incompatible-pointer-types: YES 
Compiler for C supports arguments -Werror=init-self: YES 
Compiler for C supports arguments -Werror=int-conversion: YES 
Compiler for C supports arguments -Werror=missing-declarations: YES 
Compiler for C supports arguments -Werror=missing-prototypes: YES 
Compiler for C supports arguments -Werror=pointer-arith: YES 
Compiler for C supports arguments -Werror=undef: YES 
Compiler for C supports arguments -Werror=vla: YES 
Compiler for C supports arguments -Wsuggest-attribute=format: YES 
Compiler for C supports arguments -Wwrite-strings: YES 
Build targets in project: 1

nvidia-vaapi-driver 0.1

  User defined options
    auto_features     : enabled
    buildtype         : plain
    libexecdir        : lib
    prefix            : /usr
    sbindir           : bin
    wrap_mode         : nodownload
    python.bytecompile: 1
    b_pie             : true

Found ninja-1.12.1 at /usr/bin/ninja
Generating targets:   0%|          | 0/1 eta ?                                              Writing build.ninja:   0%|          | 0/41 eta ?                                                ninja: Entering directory `/home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build'
ninja: Entering directory `/home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build'
[1/16] Compiling C object nvidia_drv_video.so.p/src_list.c.o
[1/16] Compiling C object nvidia_drv_video.so.p/src_list.c.o
[2/16] Compiling C object nvidia_drv_video.so.p/src_backend-common.c.o
[2/16] Compiling C object nvidia_drv_video.so.p/src_backend-common.c.o
[3/16] Compiling C object nvidia_drv_video.so.p/src_vc1.c.o
[3/16] Compiling C object nvidia_drv_video.so.p/src_vc1.c.o
[4/16] Compiling C object nvidia_drv_video.so.p/src_jpeg.c.o
[4/16] Compiling C object nvidia_drv_video.so.p/src_jpeg.c.o
[5/16] Compiling C object nvidia_drv_video.so.p/src_mpeg2.c.o
[6/16] Compiling C object nvidia_drv_video.so.p/src_vp8.c.o
[5/16] Compiling C object nvidia_drv_video.so.p/src_mpeg2.c.o
[6/16] Compiling C object nvidia_drv_video.so.p/src_vp8.c.o
[7/16] Compiling C object nvidia_drv_video.so.p/src_h264.c.o
[7/16] Compiling C object nvidia_drv_video.so.p/src_h264.c.o
[8/16] Compiling C object nvidia_drv_video.so.p/src_mpeg4.c.o
[8/16] Compiling C object nvidia_drv_video.so.p/src_mpeg4.c.o
[9/16] Compiling C object nvidia_drv_video.so.p/src_hevc.c.o
[9/16] Compiling C object nvidia_drv_video.so.p/src_hevc.c.o
[10/16] Compiling C object nvidia_drv_video.so.p/src_av1.c.o
[10/16] Compiling C object nvidia_drv_video.so.p/src_av1.c.o
[11/16] Compiling C object nvidia_drv_video.so.p/src_direct_direct-export-buf.c.o
[11/16] Compiling C object nvidia_drv_video.so.p/src_direct_direct-export-buf.c.o
[12/16] Compiling C object nvidia_drv_video.so.p/src_export-buf.c.o
[12/16] Compiling C object nvidia_drv_video.so.p/src_export-buf.c.o
[13/16] Compiling C object nvidia_drv_video.so.p/src_direct_nv-driver.c.o
[13/16] Compiling C object nvidia_drv_video.so.p/src_direct_nv-driver.c.o
[14/16] Compiling C object nvidia_drv_video.so.p/src_vp9.c.o
[14/16] Compiling C object nvidia_drv_video.so.p/src_vp9.c.o
[15/16] Compiling C object nvidia_drv_video.so.p/src_vabackend.c.o
[15/16] Compiling C object nvidia_drv_video.so.p/src_vabackend.c.o
[16/16] Linking target nvidia_drv_video.so
INFO: autodetecting backend as ninja
INFO: calculating backend command to run: /usr/bin/ninja -C /home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build
[16/16] Linking target nvidia_drv_video.so
INFO: autodetecting backend as ninja
INFO: calculating backend command to run: /usr/bin/ninja -C /home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build
==> Entering fakeroot environment...
==> Entering fakeroot environment...
==> Starting package()...
==> Starting package()...
ninja: Entering directory `/home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build'
ninja: Entering directory `/home/nightwatcher/.cache/yay/libva-nvidia-driver-git/src/libva-nvidia-driver-git/build'
ninja: no work to do.
ninja: no work to do.
Installing nvidia_drv_video.so to /home/nightwatcher/.cache/yay/libva-nvidia-driver-git/pkg/libva-nvidia-driver-git/usr/lib/dri
Installing nvidia_drv_video.so to /home/nightwatcher/.cache/yay/libva-nvidia-driver-git/pkg/libva-nvidia-driver-git/usr/lib/dri
==> Tidying install...
==> Tidying install...
  -> Removing libtool files...
  -> Removing libtool files...
  -> Purging unwanted files...
  -> Purging unwanted files...
  -> Removing static library files...
  -> Removing static library files...
  -> Stripping unneeded symbols from binaries and libraries...
  -> Stripping unneeded symbols from binaries and libraries...
  -> Compressing man and info pages...
  -> Compressing man and info pages...
==> Checking for packaging issues...
==> Checking for packaging issues...
==> Creating package "libva-nvidia-driver-git"...
==> Creating package "libva-nvidia-driver-git"...
  -> Generating .PKGINFO file...
  -> Generating .PKGINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .MTREE file...
  -> Generating .MTREE file...
  -> Compressing package...
  -> Compressing package...
==> Creating package "libva-nvidia-driver-git-debug"...
==> Creating package "libva-nvidia-driver-git-debug"...
  -> Generating .PKGINFO file...
  -> Generating .PKGINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .MTREE file...
  -> Generating .MTREE file...
  -> Compressing package...
  -> Compressing package...
==> Leaving fakeroot environment.
==> Leaving fakeroot environment.
==> Finished making: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 02 Aug 2024 04:37:13 PM PDT)
==> Finished making: libva-nvidia-driver-git 0.0.12.r11.gf3205bd-1 (Fri 02 Aug 2024 04:37:13 PM PDT)
==> Cleaning up...
==> Cleaning up...
loading packages...
resolving dependencies...
looking for conflicting packages...
loading packages...
resolving dependencies...
looking for conflicting packages...

Package (2)                    New Version            Net Change

libva-nvidia-driver-git        0.0.12.r11.gf3205bd-1    0.09 MiB
libva-nvidia-driver-git-debug  0.0.12.r11.gf3205bd-1    1.08 MiB

Total Installed Size:  1.17 MiB

:: Proceed with installation? [Y/n] 
checking keyring...
checking package integrity...
loading package files...
checking for file conflicts...
checking available disk space...
:: Processing package changes...
installing libva-nvidia-driver-git...
installing libva-nvidia-driver-git-debug...

Package (2)                    New Version            Net Change

libva-nvidia-driver-git        0.0.12.r11.gf3205bd-1    0.09 MiB
libva-nvidia-driver-git-debug  0.0.12.r11.gf3205bd-1    1.08 MiB

Total Installed Size:  1.17 MiB

:: Proceed with installation? [Y/n] 
checking keyring...
checking package integrity...
loading package files...
checking for file conflicts...
checking available disk space...
:: Processing package changes...
installing libva-nvidia-driver-git...
installing libva-nvidia-driver-git-debug...
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
[1A[K[32m[OK][m libva-nvidia-driver-git was installed.
Nvidia modules already included in /etc/mkinitcpio.conf
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'default'
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux.img
==> Starting build: '6.10.2-arch1-1'
  -> Running build hook: [base]
  -> Running build hook: [udev]
  -> Running build hook: [autodetect]
  -> Running build hook: [microcode]
  -> Running build hook: [modconf]
  -> Running build hook: [kms]
  -> Running build hook: [keyboard]
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
  -> Running build hook: [keymap]
  -> Running build hook: [consolefont]
==> WARNING: consolefont: no font found in configuration
  -> Running build hook: [block]
  -> Running build hook: [filesystems]
  -> Running build hook: [fsck]
==> Generating module dependencies
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux.img'
  -> Early uncompressed CPIO image generation successful
==> Initcpio image generation successful
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'fallback'
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux-fallback.img -S autodetect
==> Starting build: '6.10.2-arch1-1'
  -> Running build hook: [base]
  -> Running build hook: [udev]
  -> Running build hook: [microcode]
  -> Running build hook: [modconf]
  -> Running build hook: [kms]
==> WARNING: Possibly missing firmware for module: 'ast'
  -> Running build hook: [keyboard]
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
  -> Running build hook: [keymap]
  -> Running build hook: [consolefont]
==> WARNING: consolefont: no font found in configuration
  -> Running build hook: [block]
==> WARNING: Possibly missing firmware for module: 'aic94xx'
==> WARNING: Possibly missing firmware for module: 'bfa'
==> WARNING: Possibly missing firmware for module: 'qed'
==> WARNING: Possibly missing firmware for module: 'qla1280'
==> WARNING: Possibly missing firmware for module: 'qla2xxx'
==> WARNING: Possibly missing firmware for module: 'wd719x'
  -> Running build hook: [filesystems]
  -> Running build hook: [fsck]
==> Generating module dependencies
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux-fallback.img'
  -> Early uncompressed CPIO image generation successful
==> Initcpio image generation successful
options nvidia_drm modeset=1 fbdev=1
nvidia-drm.modeset=1 added to /etc/default/grub
blacklist nouveau
install nouveau /bin/true
